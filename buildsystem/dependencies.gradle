allprojects {
  repositories {
    jcenter()
  }
}

//Controlling Android Properties of all your modules for the main project
ext {
  androidMinSdkVersion = 14
  androidTargetSdkVersion = 22
  androidCompileSdkVersion = 22
  androidBuildToolsVersion = "23.0.1"

  ////Libraries////
  androidAnnotationsVersion = '20.0.0'
  javaxAnnotationVersion = '1.0'

  //Events
  ottoVersion = '1.3.8'

  //Support
  supportCompactVersion = '22.2.1'
  recyclerViewVersion = '22.2.1'
  playServicesVersion = '7.8.0'
  supportVersionV4 = '22.2.1'
  supportDesignVersion = '22.2.0'

  //Dependency injection
  daggerVersion = '2.0'

  //UI/Validation
  butterKnifeVersion = '7.0.1'
  komenskyVersion = '0.9.2'
  picassoVersion = '2.5.2'

  //HTTP
  okHttpVersion = '2.4.0'
  okHttpUrlConnVersion = '2.2.0'
  okioVersion = '1.4.0'
  retrofitVersion = '1.9.0'
  gsonVersion = '2.3'


  ////TESTING Libraries////
  robolectricVersion = '3.0'
  jUnitVersion = '4.12'
  assertJVersion = '1.7.1'
  mockitoVersion = '1.9.5'
  testingSupportLibVersion = '0.1'

  presentationDependencies = [
      supportV4:          "com.android.support:support-v4:${supportVersionV4}",
      suportAppCompact:   "com.android.support:appcompat-v7:${supportCompactVersion}",
      supportDesign:      "com.android.support:design:${supportDesignVersion}",
      playServices:       "com.google.android.gms:play-services:${playServicesVersion}",
      androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
      javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
      // DI
      daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
      dagger:             "com.google.dagger:dagger:${daggerVersion}",
      //UI/validation
      butterKnife:        "com.jakewharton:butterknife:${butterKnifeVersion}",
      recyclerView:       "com.android.support:recyclerview-v7:${recyclerViewVersion}",
      picasso:            "com.squareup.picasso:picasso:${picassoVersion}",
      //events
      otto:               "com.squareup:otto:${ottoVersion}",
      //http
      retrofit:           "com.squareup.retrofit:retrofit:${retrofitVersion}",
      okhttp:             "com.squareup.okhttp:okhttp:${okHttpVersion}",
      okhttpUrlConn:      "com.squareup.okhttp:okhttp-urlconnection:${okHttpUrlConnVersion}",
      okio:               "com.squareup.okio:okio:${okioVersion}",
  ]

  presentationTestDependencies = [
      otto:               "com.squareup:otto:${ottoVersion}",
      robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
      junit:              "junit:junit:${jUnitVersion}",
      mockito:            "org.mockito:mockito-core:${mockitoVersion}",
      testingSupportLib:  "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",
      assertj:            "org.assertj:assertj-core:${assertJVersion}",
  ]

  dataDependencies = [
      // DI
      androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
      daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
      dagger:             "com.google.dagger:dagger:${daggerVersion}",
      androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
      javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
      //http
      retrofit:           "com.squareup.retrofit:retrofit:${retrofitVersion}",
      okhttp:             "com.squareup.okhttp:okhttp:${okHttpVersion}",
      okhttpUrlConn:      "com.squareup.okhttp:okhttp-urlconnection:${okHttpUrlConnVersion}",
      okio:               "com.squareup.okio:okio:${okioVersion}",
      gson:               "com.google.code.gson:gson:${gsonVersion}",
      //events
      otto:               "com.squareup:otto:${ottoVersion}",
  ]

  dataTestDependencies = [
      otto:               "com.squareup:otto:${ottoVersion}",
      junit:              "junit:junit:${jUnitVersion}",
      assertj:            "org.assertj:assertj-core:${assertJVersion}",
      mockito:            "org.mockito:mockito-core:${mockitoVersion}",
      robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
  ]
}